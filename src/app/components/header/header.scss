@use '../../../partials/variables';

header {
    padding-inline: 16px;
    padding-block: 8px;
    background-color: variables.$accent-color;
    color: variables.$main-color;
}

.navBar {
    display: flex;
    align-items: center;
    padding-top: variables.$small-padding;
    padding-bottom: variables.$small-padding;
}

.navBar > div {
    padding-right: variables.$large-padding;
}

.headerLinks {
    display: flex;
    align-items: center;
}

.headerLinks > div {
    padding-right: variables.$small-padding;
    padding-left: variables.$small-padding;
}

.burger {
  display: none;
}

@media (max-width: variables.$mobile-breakpoint) {
    .burger {
        display: block;
        margin-left: auto;
    }

    .navBar {
        justify-content: space-between;
    }

    .navBar > div {
        padding-right: 0px;
    }

    .headerLinks {
        display: flex; 
        flex-direction: column;
        background: variables.$accent-color;
        position: absolute;
        top: -100px;  
        right: 0;
        width: 200px;
        padding: 10px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }

    .headerLinks.open {
        display: flex; 
    }

    @keyframes slideInMenu {
        from { transform: translateX(0px) translateY(0px); }
        to { transform: translateX(0px) translateY(160px); }
    }

    .slideInMenu {
        animation: slideInMenu variables.$anim-quick ease forwards;
    }
    .slideOutMenu {
        animation: slideInMenu variables.$anim-quick ease reverse;
    }
}

.makeMouseOverPointer {
    cursor: pointer;
    -webkit-text-stroke: 1px transparent;
    transition: color variables.$anim-quick ease, -webkit-text-stroke-color variables.$anim-quick ease;

    &:hover {
        -webkit-text-stroke-color: variables.$hover-color;
    }

    @media (max-width: variables.$mobile-breakpoint) {
        @keyframes strokePulse {
            0%  { -webkit-text-stroke-color: variables.$hover-color; }
            100% { -webkit-text-stroke-color: transparent; }
        }

        &.animatePulse {
            animation: strokePulse variables.$anim-slow ease forwards;
        }
    }
}